#!/usr/bin/env ruby

require 'butcher'
require 'optparse'

EX_USAGE     = 64
EX_UNMATCHED = 65
EX_AMBIGUOUS = 66

options = {}
parser = OptionParser.new do |opts|
  opts.banner = "Usage: stab [options] node_name"

  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end

  opts.on('-c', '--cache-dir DIR', 'Location to save cache files (default: /tmp/butcher)') do |dir|
    ENV["CACHE_DIR"] = dir
  end

  opts.on('-f', '--force', 'Check for new nodes even if a cache file exists') do
    options[:force] = true
  end

  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    options[:verbose] = v
  end
end

begin parser.parse!
rescue OptionParser::InvalidOption => e
  puts e
  puts parser
  exit EX_USAGE
end

if ARGV == []
  puts parser
  exit EX_USAGE
end

begin
  Butcher::Stab::CLI.new.run(ARGV, options)
rescue Butcher::UnmatchedNode
  STDERR.puts %Q{Unable to find node "#{ARGV.first}"}
  exit EX_UNMATCHED
rescue Butcher::AmbiguousNode => e
  STDERR.puts %Q{Multiple nodes match "#{ARGV.first}"}
  STDERR.puts e.message
  exit EX_AMBIGUOUS
end